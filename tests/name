(
  (Imports Prelude)
  (Types
    (Any Prelude Any)
    (String Prelude String)
    (Code Prelude Code)
  )
  (FuncRefs
    ;(name module field outs ins)

    (strcat Prelude strcat 1 2)
    (print Prelude print 0 1)
    (read Prelude read 1 0)
  )
  (Structs
    (SELF
      (MAIN Code)
      (str1 String)
      (str2 String)
      (name String)
      (prompt String)
    )
    (func$regs
      (SELF SELF)
      (a String)
      (b String)
      (name String)
    )
    (MAIN$regs
      (SELF SELF)
      (nm String)
      (msg String)
    )
  )
  (Functions
    (func
      func$regs
      (in name) (out)
      (Code
        (get a SELF str1)
        (strcat a a name)
        (get b SELF str2)
        (strcat a a b)
        (print a)
        (end)
      )
    )
    (MAIN
      MAIN$regs
      (in) (out) ;Ambos Vacíos
      (Code
        ;(get nm SELF name)

        (get msg SELF prompt)
        (print msg)
        (read nm)
        (func nm)
        (end)
      )
    )
  )
  (Constants
    (str1 str "Hola ")
    (str2 str "!")
    (prompt str "¿Cómo te llamas?: ")
    (name str "Arnaud")
    (MAIN code MAIN)
  )
)