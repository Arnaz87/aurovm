(
  (Imports Lua Prelude)
  (Types
    ($sub Lua sub)
    (Any Prelude Any)
    ($app Lua append)
    ($lt Lua lt)
    ($add Lua add)
    (Empty Prelude Empty)
    ($eq Lua eq)
    (print Lua print)
  )
  (Structs
    (SELF
      (MAIN MAIN)
      ($const$1 Any)
      ($const$4 Any)
      ($const$3 Any)
      ($const$6 Any)
      ($const$9 Any)
      ($const$11 Any)
      ($const$2 Any)
      ($const$5 Any)
      ($const$10 Any)
      ($const$8 Any)
      ($const$7 Any)
    )
    (main-regs
      (SELF SELF)
      (ARGS Empty)
      ($const$1 Any)
      ($const$4 Any)
      ($const$3 Any)
      ($const$6 Any)
      ($const$9 Any)
      ($const$11 Any)
      ($const$2 Any)
      ($const$5 Any)
      ($const$10 Any)
      ($const$8 Any)
      ($const$7 Any)
      ($add $add)
      ($sub $sub)
      ($eq $eq)
      ($lt $lt)
      ($app $app)
      (print print)
      (bottles$1 Any)
      (r$1 Any)
      (r$0 Any)
      (plural$1 Any)
      (r$1 Any)
      (r$2 Any)
      (r$3 Any)
      (r$4 Any)
      (r$5 Any)
      (r$6 Any)
      (r$7 Any)
      (r$8 Any)
      (r$9 Any)
      (r$10 Any)
      (r$11 Any)
      (r$12 Any)
    )
  )
  (Functions
    (MAIN
      Empty
      main-regs
      (Code
        (get $const$1 SELF $const$1)
        (cpy bottles$1 $const$1)
        (lbl lbl_1)
        (new $lt)
        (get $const$2 SELF $const$2)
        (set $lt a $const$2)
        (set $lt b bottles$1)
        (call $lt)
        (get r$1 $lt r)
        (ifn lbl_2 r$1)
        (new $eq)
        (set $eq a bottles$1)
        (get $const$3 SELF $const$3)
        (set $eq b $const$3)
        (call $eq)
        (get r$0 $eq r)
        (ifn lbl_3 r$0)
        (get $const$4 SELF $const$4)
        (cpy plural$1 $const$4)
        (jmp lbl_4)
        (lbl lbl_3)
        (get $const$5 SELF $const$5)
        (cpy plural$1 $const$5)
        (lbl lbl_4)
        (new print)
        (new $app)
        (new $app)
        (set $app a bottles$1)
        (set $app b plural$1)
        (call $app)
        (get r$1 $app r)
        (set $app a r$1)
        (get $const$6 SELF $const$6)
        (set $app b $const$6)
        (call $app)
        (get r$2 $app r)
        (set print a r$2)
        (call print)
        (get r$3 print r)
        (new print)
        (new $app)
        (new $app)
        (set $app a bottles$1)
        (set $app b plural$1)
        (call $app)
        (get r$4 $app r)
        (set $app a r$4)
        (get $const$7 SELF $const$7)
        (set $app b $const$7)
        (call $app)
        (get r$5 $app r)
        (set print a r$5)
        (call print)
        (get r$6 print r)
        (new print)
        (get $const$8 SELF $const$8)
        (set print a $const$8)
        (call print)
        (get r$7 print r)
        (new $sub)
        (set $sub a bottles$1)
        (get $const$9 SELF $const$9)
        (set $sub b $const$9)
        (call $sub)
        (get r$8 $sub r)
        (cpy bottles$1 r$8)
        (new print)
        (new $app)
        (new $app)
        (set $app a bottles$1)
        (set $app b plural$1)
        (call $app)
        (get r$9 $app r)
        (set $app a r$9)
        (get $const$10 SELF $const$10)
        (set $app b $const$10)
        (call $app)
        (get r$10 $app r)
        (set print a r$10)
        (call print)
        (get r$11 print r)
        (new print)
        (get $const$11 SELF $const$11)
        (set print a $const$11)
        (call print)
        (get r$12 print r)
        (jmp lbl_1)
        (lbl lbl_2)
        (end)
      )
    )
  )
  (Constants
    ($const$1 num 5.0)
    ($const$4 str " bottle")
    ($const$3 num 1.0)
    ($const$6 str " of beer on the wall")
    ($const$9 num 1.0)
    ($const$11 str "")
    ($const$2 num 0.0)
    ($const$5 str " bottles")
    ($const$10 str " of beer on the wall.")
    ($const$8
      str
      "Take one down, pass it around"
    )
    ($const$7 str " of beer")
  )
)
